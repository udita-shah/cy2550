import argparse
import random

parser = argparse.ArgumentParser()
parser.add_argument("-w", "--words", type=int, default=4, help="include WORDS words in the password (default=4)")
parser.add_argument("-c", "--caps", type=int, default=0, help="capitalize the first letter of CAPS random words (default=0)")
parser.add_argument("-n", "--numbers", type=int, default=0, help="insert NUMBERS random numbers in the password (default=0)")
parser.add_argument("-s", "--symbols", type=int, default=0, help="insert SYMBOLS random symbols in the password (default=0)")
args = parser.parse_args()

def xkcdpwgen(w,c,n,s):
    pt=open('./words.txt','r')
    allText = pt.read()
    words = list(map(str, allText.split()))
    if(w>4 or w<1):
        w=4
    pwlist=[]
    for i in range(w):
        pwlist.append(random.choice(words))
       
    
    if(c==w):
        for i in range(c):
            pwlist[i]=pwlist[i].title()
    elif(c<w and c>=0):
       for i in range(c):
            x = random.randint(0,w-1)
            pwlist[x]=pwlist[x].title()
    else:
      raise Exception("Please pass valid Capital input.")

    if(n>0):
        numlist=[]
        for i in range(n):
            numlist.append(random.randint(0,9))
            index = random.randint(0,len(pwlist))
            pwlist = pwlist[:index] + [random.choice(numlist)] + pwlist[index:]
    if(s>0):
        speclist=['~','!','@','#','$','%','^','&','*',':',';','.']
        for i in range(s):
            index = random.randint(0,len(pwlist))
            pwlist = pwlist[:index] + [random.choice(speclist)] + pwlist[index:]
        
    for i in pwlist:
        print(i,end='')
    #print("\n",x)  

wd = args.words
ca = args.caps
nu = args.numbers
spe = args.symbols       
xkcdpwgen(w=wd,c=ca,n=nu,s=spe)